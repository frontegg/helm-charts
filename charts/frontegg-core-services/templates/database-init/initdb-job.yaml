{{- if .Values.initDbJob.enabled }}
{{- $top := . }}
{{- $values := .Values }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "frontegg-enterprise.fullname" . }}-initdb
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "frontegg-enterprise.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: hook-succeeded, before-hook-creation
    {{- with $values.initDbJob.job.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      labels:
        {{- include "frontegg-enterprise.selectorLabels" . | nindent 8 }}
        job-name: {{ include "frontegg-enterprise.fullname" . }}-initdb
    spec:
      restartPolicy: Never
      containers:
      - name: mysql-client
        image: "{{ $values.initDbJob.job.image.repository }}:{{ $values.initDbJob.job.image.tag }}"
        imagePullPolicy: {{ .Values.initDbJob.job.image.pullPolicy }}
        resources:
          {{- with $values.initDbJob.job.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- $secretName := $values.initDbJob.secret.name }}
        env:
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: {{ $secretName }}
              key: host
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ $secretName }}
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $secretName }}
              key: password
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for DB host $MYSQL_HOST..."
          # Simple wait loop (adjust timeout/checks as needed)
          timeout=60
          while ! mysqladmin ping -h"$MYSQL_HOST" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" --silent; do
            timeout=$(($timeout - 1))
            if [ $timeout -eq 0 ]; then
              echo "Timeout waiting for DB."
              exit 1
            fi
            sleep 1
          done
          echo "DB host ready. Executing script..."
          mysql -h"$MYSQL_HOST" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" < /scripts/db.sql
          echo "Script execution finished."
        volumeMounts:
        - name: initdb-scripts
          mountPath: /scripts
      volumes:
      - name: initdb-scripts
        configMap:
          name: {{ include "frontegg-enterprise.fullname" . }}-initdb-scripts
{{- end }} 