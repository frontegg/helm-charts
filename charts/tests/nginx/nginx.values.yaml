controller:
  maxUnavailable: 10%
  opentelemetry:
    enabled: true
  allowSnippetAnnotations: true
  ingressClass: nginx
  ingressClassResource:
    enabled: false
    name: nginx
    default: false
    controllerValue: k8s.io/ingress-nginx
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
    limits:
      memory: 1.5Gi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 50
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 70
  keda:
    enabled: false
  extraArgs:
    enable-ssl-chain-completion: "true"
    metrics-per-host: "false"
  nodeSelector:
    kubernetes.io/os: linux
  config:
    annotations-risk-level: Critical
    proxy-read-timeout: "55"
    proxy-connect-timeout: "55"
    proxy-send-timeout: "55"
    log-format-escape-json: "true"
    log-format-upstream: '{"timestamp": "$time_iso8601", "http_x_forwarded_for": "$http_x_forwarded_for", "x_forward_for": "$proxy_add_x_forwarded_for","fronteggtraceid": "$opentelemetry_trace_id", "proxy_upstream_name":
      "$proxy_upstream_name", "upstream_status": "$upstream_status", "upstream_addr": "$upstream_addr","http_request":{"request_method":
      "$request_method", "request_url": "$host$request_uri", "status": $status,"request_size":
      "$request_length", "response_size": "$upstream_response_length", "user_agent": "$http_user_agent",
      "remote_ip": "$remote_addr", "referer": "$http_referer","cf-ray": "$http_cf_ray" ,"latency": "$upstream_response_time s"}}'
    client-header-buffer-size: "16k"
    http2-max-header-size: "16k"
    large-client-header-buffers: "8 16k"
    enable-opentelemetry: "true"
    otlp-collector-host: coralogix-opentelemetry-gateway.observability.svc.cluster.local
    opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
    opentelemetry-trust-incoming-span: "false"
    opentelemetry-propagate: "traceparent"
    enable-modsecurity: "true"
    use-gzip: "true"
    gzip-types: "application/atom+xml application/javascript application/x-javascript application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/javascript text/plain text/x-component"
    service-upstream: "true"
  service:
    type: NodePort
    targetPorts:
      https: http
    annotations: {}
    externalTrafficPolicy: Local
    loadBalancerSourceRanges: []
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
      namespace: observability
      additionalLabels:
        release: prometheus
      namespaceSelector:
        matchNames:
          - ingress-nginx
