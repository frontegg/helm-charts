
---
# Source: frontegg-enterprise/templates/config-center.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-center
  labels:
    helm.sh/chart: frontegg-enterprise-0.0.1
    app.frontegg.com/name: frontegg-enterprise
    app.frontegg.com/instance: xxx
    app.frontegg.io/version: "0.0.1"
    app.frontegg.io/managed-by: Helm
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-100"

data:
  prehook-service-url: "http://frontegg-prehook-service"
  admins-service-url: "http://frontegg-admins-service"
  audits-service-url: "http://frontegg-audits-service"
  authentication-service-url: "http://frontegg-authentication-service"
  metadata-service-url: "http://frontegg-metadata-service"
  notification-service-url: "http://frontegg-notification-service"
  reports-engine-url: "http://frontegg-reporting-engine"
  reports-service-url: "http://frontegg-reporting-service"
  team-service-url: "http://frontegg-team-management-service"
  vendors-service-url: "http://frontegg-vendors-service"
  tenants-service-url: "http://frontegg-tenants-service"
  webpush-service-url: "http://frontegg-webpush-service"
  webhook-service-url: "http://frontegg-webhook-service"
  events-service-url: "http://frontegg-event-service"
  identity-service-url: "http://frontegg-identity-service"
  nlp-execution-assistant-url: "http://nlp-execution-assistant-v2-web"
  identity-p1-service-url: "http://frontegg-identity-service-hp"
  integrations-service-url: "http://frontegg-integrations-service"
  api-gateway-url: "https://dev-api.frontegg.com"
  api-gateway-internal-url: "http://api-gateway-v2-web"
  oauth-service-url: "http://frontegg-oauth-service"
  subscriptions-service-url: "http://frontegg-subscriptions-service"
  usage-tracking-service-url: "http://usage-tracking-service"
  env-duplicator-service-url: "http://frontegg-env-duplicator-service"
  policy-service-url: "http://frontegg-policy-service"
  dashboard-env-builder-url: "http://frontegg-dashboard-env-builder-service"
  frontegg-vendor-host: "EMPTY"
  cdn-url: ""
  backoffice-service-url: "http://frontegg-backoffice-service"
  pricing-views-url: "http://frontegg-pricing-views-service"
  email-service-url: "http://frontegg-email-service"
  directory-service-url: "http://frontegg-directory-service"
  logs-service-url: "http://frontegg-logs-service"
  logs-streaming-service-url: "http://frontegg-logs-streaming-service"
  entitlements-service-url: "http://frontegg-entitlements-service"
  security-engines-url: "http://frontegg-security-engines"
  applications-service-url: "http://frontegg-applications-service"
  signals-service-url: "http://frontegg-signals-service"
  security-center-service-url: "http://frontegg-security-center-service"
  custom-code-service-url: "http://frontegg-custom-code-service"
  entitlements-agent-url: "http://frontegg-entitlements-agent"
  auth-hub-service-url: "http://auth-hub-v2-web"
  anomaly-detection-url: "http://anomaly-detection-v2-web"
  idgw-backend-url: ""
  mcp-server-url: ""
  aws-region: "us-east-1"
  policy-service-aws-region: "us-east-1"
  policy-service-s3-opa-policy-bucket: ""
  entitlements-service-s3-opa-policy-bucket: ""
  custom-code-service-lambda-management-role-arn: ""
  custom-code-service-lambda-execution-role-arn: ""
  custom-code-service-lambda-execution-default-policies: ""
  custom-code-service-lambda-layers: ""
  custom-code-service-lambda-env-cx-domain: ""
  env-id: ""
  portal-url: ""
  portal-v1-url: ""
  cors-origin: ""
  custom-domain-cloudflare-ssl-endpoint: ""
  tracing-collector-endpoint: http://logzio-otel-traces.observability.svc.cluster.local:14268/api/traces
  idgw-application-id: ""
  splitio-proxy-endpoint: http://split-proxy-v2-web.feature-management.svc.cluster.local
  audits-topic-name: "audits-v1"
  audits-db-type: "mysql"
  audits-db-name: "frontegg_audits"
  metadata-service-fetch-pubsub-strategy: "true"
  metadata-service-topic-name: "METADATA_UPDATED"
  audits-service-redis-db-index: "2"
  audits-kafka-retry-count: "3"
  authentication-cookie-domain: ""
  authentication-secured-cookie: ""
  api-gateway-enable-redis-store: ""
  api-gateway-usage-reporting-enabled: ""
  api-gateway-metrics-enabled: ""
  api-gateway-redis-db-index: "9"
  enable-multi-hosts: ""
  api-gateway-ignore-hosts: ""
  api-gateway-redirect-enabled: "false"
  api-gateway-redirect-url: ""
  backoffice-redis-db-index: "12"
  entitlements-redis-db-index: "12"
  entitlements-vendor-snapshot-job-delay-ms: "10000"
  entitlements-vendor-snapshot-job-attempts: "3"
  entitlements-service-legacy-vendors-plan-ids: ""
  connectors-worker-service-redis-db-index: "5"
  mixpanel-id: ""
  dashboard-hubspot-enabled: ""
  dashboard-devrev-enabled: "true"
  devrev-api-url: "https://api.devrev.ai"
  dashboard-domain-suffix: ""
  dashboard-cdn-url: ""
  cdn-bucket: ""
  backoffice-viewer-role-id: ""
  backoffice-editor-role-id: ""
  frontegg-ui-events-url: "https://ui-events.frontegg.com"
  env-duplicator-mysql-db-name: "frontegg_env_duplicator"
  env-duplicator-configuration-copy-result-topic-name: "configuration-copy-result-v1"
  env-duplicator-configuration-copy-topic-name: "configuration-copy-v1"
  events-service-redis-db-index: "7"
  identity-service-db-name: "frontegg_identity"
  identity-service-audit-triggered-topic-name: "AUDIT_TRIGGERED"
  identity-service-max-concurrent-sessions: "100"
  metadata-service-db-connection-timeout-ms: "30000"
  metadata-service-db-connection-retry-attempts: "3"
  metadata-service-db-connection-retry-delay: "1000"
  metadata-service-ip-stack-url: ""
  metadata-service-redis-db-index: "0"
  events-pubsub-topic: "events"
  oauth-service-db-name: "frontegg_oauth"
  oauth-service-redis-db-index: "10"
  team-management-service-db-name: "frontegg_team_management"
  team-management-service-vault-url: "" ### check this
  team-management-service-redis-db-index: "1"
  team-management-service-authorization-topic-name: "authorization-v1"
  tenants-usage-reporting-topic-name: "usage-reporting-v1"
  tenants-redis-db-index: "8"
  tenants-service-mysql-db-name: "frontegg_tenants"
  tenant-assets-s3-url: "https://-tenants-assets.s3.us-east-1.amazonaws.com"
  tenant-assets-s3-bucket: ""
  tenant-assets-s3-endpoint: ""
  tenant-assets-s3-aws-endpoint: ""
  vendors-mysql-db-name: "frontegg_vendors"
  vendors-asset-blob-storage-container-name: "public-vendor-assets"
  vendors-service-vendors-domain: "dev.frontegg.com"
  custom-domain-cluster-ingress-class: "nginx"
  custom-domain-cluster-issuer-name: "letsencrypt"
  custom-domain-cluster-default-port: "443"
  custom-domain-cluste-namespace: "custom-domains"
  custom-domain-ssl-endpoint: ""
  custom-domain-cloudflare-transform-rule-set-id: "xxxx"
  custom-domain-cloudflare-origin-rule-set-id: "xxxx"
  vendors-service-kafka-vendors-topic: "vendors-v1"
  webhook-service-mongodb-connection-retry-attempts: "3"
  webhook-service-mongodb-connection-retry-delay: "1000"
  webhook-mysql-db-name: "frontegg_webhooks"
  webhook-proxy-enabled: "true"
  frontegg-proxy-host: "frontegg-forward-proxy"
  frontegg-proxy-port: "8080"
  frontegg-proxy-protocol: "http"

  # TODO: add secret '$secret.frontegg.forwardProxy.auth.password'
---
# Source: frontegg-enterprise/templates/initdb-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: xxx-frontegg-enterprise-initdb-scripts
  namespace: default
  labels:
    helm.sh/chart: frontegg-enterprise-0.0.1
    app.kubernetes.io/name: frontegg-enterprise
    app.kubernetes.io/instance: xxx
    app.kubernetes.io/version: "2025.04.01"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # Run this early
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-100"
data:
  db.sql: |-
    CREATE DATABASE IF NOT EXISTS frontegg_usage_tracking CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_vendors CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_subscriptions CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_audits CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_events CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_team_management CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_webhooks CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_feature_flags CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_identity CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_oauth CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_tenants CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_backoffice CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_dashboard_env_builder CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_env_duplicator CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_event_retry CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_entitlements CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
    CREATE DATABASE IF NOT EXISTS frontegg_security_engines CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
---
# Source: frontegg-enterprise/templates/initdb-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: xxx-frontegg-enterprise-initdb
  namespace: default
  labels:
    helm.sh/chart: frontegg-enterprise-0.0.1
    app.kubernetes.io/name: frontegg-enterprise
    app.kubernetes.io/instance: xxx
    app.kubernetes.io/version: "2025.04.01"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-50"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontegg-enterprise
        app.kubernetes.io/instance: xxx
        job-name: xxx-frontegg-enterprise-initdb
    spec:
      restartPolicy: Never
      containers:
      - name: mysql-client
        image: "mysql:8.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_HOST
          value: "prod-mysql8-0-35.c1hrwrvemzzh.us-east-1.rds.amazonaws.com"
        - name: MYSQL_USER
          value: "rdsmaster_IhsLkE"
        - name: MYSQL_PASSWORD
          value: "CGXiW7u4KJNKBRK2fjnja5QgnDbzOk57"
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for DB host $MYSQL_HOST..."
          # Simple wait loop (adjust timeout/checks as needed)
          timeout=60
          while ! mysqladmin ping -h"$MYSQL_HOST" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" --silent; do
            timeout=$(($timeout - 1))
            if [ $timeout -eq 0 ]; then
              echo "Timeout waiting for DB."
              exit 1
            fi
            sleep 1
          done
          echo "DB host ready. Executing script..."
          mysql -h"$MYSQL_HOST" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" < /scripts/db.sql
          echo "Script execution finished."
        volumeMounts:
        - name: initdb-scripts
          mountPath: /scripts
      volumes:
      - name: initdb-scripts
        configMap:
          name: xxx-frontegg-enterprise-initdb-scripts
