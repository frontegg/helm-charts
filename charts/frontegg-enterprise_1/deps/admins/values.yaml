admins:
  name: admins
  team: frontegg
  envID: &envId "prod-main-secret20250407120514343900000001"
  appVersion: 0b5b99d
  image:
    repository: frontegg/admins-service
    prefix: &imagePrefix 527305576865.dkr.ecr.us-east-1.amazonaws.com/docker-hub/
  argoRollouts:
    enabled: false
  defaults: &defaultsAnnotations
    migration:
      annotations:
        "helm.sh/hook": pre-install, pre-upgrade
        "helm.sh/hook-weight": "-5"
        "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    configmap:
      annotations:
        "helm.sh/hook": pre-install, pre-upgrade
        "helm.sh/hook-weight": "-100"
        "helm.sh/hook-delete-policy": "before-hook-creation"
    secret:
      annotations:
        "helm.sh/hook": pre-install, pre-upgrade
        "helm.sh/hook-weight": "-100"
        "helm.sh/hook-delete-policy": "before-hook-creation"
    sereviceAccount:
      annotations:
        "helm.sh/hook": pre-install, pre-upgrade
        "helm.sh/hook-weight": "-100"

  web:
    enabled: true
    command: [ "/bin/bash" ]
    args: [ "entrypoint.sh" ]
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        memory: 1Gi
    service:
      ports:
        - port: 80
          targetPort: 3004
          protocol: TCP
          name: http
    ports:
      - name: http
        containerPort: 3004
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 5
      periodSeconds: 5
  configmap:
    data:
      CLOUD_ENVIRONMENT: production
      NODE_ENV: production
      FRONTEGG_CONFIG_FILE_PATH: "/etc/config/config.env"
  configuration:
    map:
      config-center:
        FRONTEGG_VENDORS_SERVICE_URL: vendors-service-url
        FRONTEGG_IDENTITY_SERVICE_URL: identity-service-url
        FRONTEGG_TENANTS_SERVICE_URL: tenants-service-url
        PORTAL_URL: portal-url

  externalSecret:
    enabled: true
    mountPath: /etc/config/config.env
    text: |
      {{- $secret := .contents | fromYaml }}
      FRONTEGG_EVENT_SERVICE_API_KEY={{ $secret.frontegg.apiKeys.eventsServiceApiKey | toYaml }}
      FRONTEGG_ADMINS_SERVICE_API_KEY={{ $secret.frontegg.apiKeys.adminsServiceApiKey | toYaml }}
      FRONTEGG_VENDORS_SERVICE_API_KEY={{ $secret.frontegg.apiKeys.vendorsServiceApiKey | toYaml }}
      FRONTEGG_IDENTITY_SERVICE_API_KEY={{ $secret.frontegg.apiKeys.identityServiceApiKey | toYaml }}
      FRONTEGG_CLIENT_ID={{ $secret.frontegg.xxx.fronteggClientId | toYaml }}
      FRONTEGG_KAFKA_BROKER_LIST={{ $secret.databases.kafka.brokerList | toYaml }}
      FRONTEGG_KAFKA_SASL_PASSWORD={{ $secret.databases.kafka.saslPassword | toYaml }}
      FRONTEGG_KAFKA_SASL_USERNAME={{ $secret.databases.kafka.saslUserName | toYaml }}
      FRONTEGG_SPLIT_IO_KEY={{ $secret.externalServices.split.sdkKey | toYaml }}
      FRONTEGG_TENANTS_SERVICE_API_KEY={{ $secret.frontegg.apiKeys.tenantsServiceApiKey | toYaml }}
    additionalSecrets: ""