
# -- Set frontegg's configurations
frontegg:
  # -- Docker Images registry properties
  images:
    # -- Set enabled to create a secret with Frontegg's registry properties
    enabled: true
    # -- Set registry name
    registry: docker.io
    # -- Set username for docker registry provided by Frontegg
    username: ""
    # -- Set password for docker registry provided by Frontegg
    password: ""


api-gateway:
  # -- Provide the amount of pods if HPA is not enabled
  replicaCount: 2
  # -- Provide the image docker tag default: latest
  appVersion: "2020.12.14201945"
  # -- Manage docker image properties
  image:
    # -- Provide docker image repository
    repository: frontegg/hybrid-api-gateway
    # -- Provide image pull policy
    pullPolicy: Always

  podAnnotations: {}
  podLabels: {}

  # -- Provide secret name for Frontegg's docker image repository.
  imagePullSecrets:
    - name: regcred

  # -- override application name instead of api-gateway for `app:` labels
  nameOverride: ""
  # -- Provide a name instead of {releaseName}-api-gateway
  fullnameOverride: ""

  # - Setup Service properties for team-management-service (open only one port)
  service:
    # -- Set service type
    type: ClusterIP
    # -- Set service port
    protocol: TCP
    # - Set service target port to map
    port: 80
    # -- Set port protocol default: TCP
    targetPort: 9090
    # - Set port name
    name: access-port

  # -- HPA properties for team-management-service
  # -- If autoscaling is enabled it will monitor the service and raise or lower pods amount based upon usage
  # -- If autoscaling is disabled team-management-service will be managed by replicaset with `replicaCount` determine pod amount
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  # -- Enable Ingress if access from the internet is needed
  ingress:
    enabled: false
    # -- provide a different name for the host path example: api.acme.com

    hostnameOverride: ""
    # -- provide the needed ingress annotation
    # -- example:
    # --  kubernetes.io/tls-acme: "true"
    # --  kubernetes.io/ingress.class: "nginx"
    # --  ingress.kubernetes.io/force-ssl-redirect: "true"
    # --  nginx.ingress.kubernetes.io/server-snippet: |
    # --    location ~* ^/(metrics|healthcheck) {
    # --      deny all;
    # --      return 403;
    # --    }
    annotations: {}
    # -- If enabled ingress will search for secret to enable TLS
    tls:
      enabled: false
      secretName: ""

  # -- Set api-gateway resources
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 250m
      memory: 512Mi

  nodeSelector:
    "beta.kubernetes.io/os": linux

  # -- Provide deployment tolerations
  tolerations: []

  # -- Provide deployment affinity
  affinity: {}

  configuration:
    secrets: {}
    map: {}

  # -- Frontegg's services url for inner communications
  # -- Provide an alternate url for a service if a service name was changed
  network:
    adminsServiceUrl: http://frontegg-admins-service
    auditsServiceUrl: http://frontegg-audits-service
    authenticationServiceUrl: http://frontegg-authentication-service
    metadataServiceUrl: http://frontegg-metadata-service
    notificationServiceUrl: http://frontegg-notification-service
    reportsEngineUrl: http://frontegg-reporting-engine
    reportsServiceUrl: http://frontegg-reporting-service
    teamServiceUrl: http://frontegg-team-management-service
    vendorsServiceUrl: http://frontegg-vendors-service
    tenantsServiceUrl: http://frontegg-tenants-service
    webpushServiceUrl: http://frontegg-webpush-service
    featureFlagsServiceUrl: http://frontegg-feature-flags-service
    webhookServiceUrl: http://frontegg-webhook-service
    eventsServiceUrl: http://frontegg-event-service
    identityServiceUrl: http://frontegg-identity-service
    integrationsServiceUrl: http://frontegg-integrations-service

  # - Frontegg configuration properties
  frontegg:
    # Frontegg authentication key, provided by frontegg
    authenticationPublicKey: ""
    # Frontegg api entry point.
    apiGatewayUrl: https://api.frontegg.com
    # Frontegg authentication url.
    authenticationServiceUrl: "https://api.frontegg.com/auth/vendor"
    # Frontegg configration url.
    metadataServiceUrl: https://api.frontegg.com/metadata
    hybridServices: "identity,team"

identity-service:
  # -- Provide the amount of pods if HPA is not enabled
  replicaCount: 2

  # -- Provide the image docker tag default: latest
  appVersion: "2020.12.15104347"

  # -- Manage docker image properties
  image:
    # -- Provide docker repository hub
    repository: frontegg/hybrid-identity-service
    # -- Provide image pull policy
    pullPolicy: Always

  # -- Provide secret name for frontegg's repository
  imagePullSecrets:
    - name: regcred

  # -- Provide a name in place of identity-service for `app:` labels
  nameOverride: ""
  # -- Provide a name in place of {releaseName}-identity-service
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  # -- Setup Service properties for identity-service (open only one port)
  service:
    # -- Set service type
    type: ClusterIP
    # -- Set service port
    protocol: TCP
    # -- Set service target port to map
    port: 80
    # -- Set port protocol default: TCP
    targetPort: 3016
    # -- Set port name
    name: access-port

  # -- HPA properties for identity-service
  # -- If autoscaling is enabled it will monitor the service and raise or lower pods amount based upon usage
  # -- If autoscaling is disabled identity-service will be managed by replicaset with `replicaCount` determine pod amount
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  # -- Set identity-service resources
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 250m
      memory: 512Mi


  nodeSelector:
    "beta.kubernetes.io/os": linux

  # -- Provide deployment tolerations
  tolerations: []

  # -- Provide deployment affinity
  affinity: {}

  configuration:
    secrets: {}
    map: {}

  # -- Set database connection string values
  database:
    host: ""
    username: ""
    password: ""
    ssl: "true"
    name: "frontegg_identity"
  # -- Set Redis connection string values
  redis:
    host: ""
    password: ""
    port: "6379"
    tls: "true"

  # -- Frontegg's services url for inner communications
  # -- Provide an alternate url for a service if a service name was changed
  network:
    teamServiceUrl: http://frontegg-team-management-service

  # -- Set frontegg's api key for emails
  email:
    apiKey: ""

  # -- Set Frontegg's api key for emails
  frontegg:
    # -- Set Frontegg provided in frontegg's portal administration
    clientId: ""
    apiKey: ""
    # -- Set Frontegg's Authentication Url
    authenticationUrl: "https://api.frontegg.com/vendors/auth/token"
    # -- Set Frontegg's identity service url
    managedIdentityServiceUrl: "https://api.frontegg.com/identity"
    # -- Set Frontegg's identity service url
    emailTemplateRedirectUrl: ""
    sync:
      # -- Enable Configuration sync process with Frontegg's managed cloud
      enabled: "true"
      # -- Set authentication failure retry delay in milliseconds.
      authenticationRetryDelay: "5000"
      # -- Set sync time interval (minutes) with Frontegg's managed cloud.
      intervalTime: "15"
      # -- Set true to shutdown secure access in case of authentication failure on pod startup.
      shutdownOnAuthenticationFailure: "true"

team-management-service:
  # -- Provide the amount of pods if HPA is not enabled
  replicaCount: 2

  # -- Provide the image docker tag default: latest
  appVersion: "2020.12.14132859"

  # -- Manage docker image properties
  image:
    # -- Provide docker repository hub
    repository: frontegg/hybrid-team-management-service
    # -- Provide image pull policy
    pullPolicy: Always

  # -- Provide secret name for frontegg's repository
  imagePullSecrets:
    - name: regcred

  # -- Provide a name in place of team-management-service for `app:` labels
  nameOverride: ""
  # -- Provide a name in place of {releaseName}-team-management-service
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  # -- Setup Service properties for team-management-service (open only one port)
  service:
    # -- Set service type
    type: ClusterIP
    # -- Set service port
    port: 80
    # -- Set service target port to map
    targetPort: 3003
    # -- Set port protocol default: TCP
    protocol: TCP
    # -- Set port name
    name: http
  # -- Set team-management-service resources

  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 250m
      memory: 512Mi

  # -- HPA properties for team-management-service
  # -- If autoscaling is enabled it will monitor the service and raise or lower pods amount based upon usage
  # -- If autoscaling is disabled team-management-service will be managed by replicaset with `replicaCount` determine pod amount
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  nodeSelector:
    "beta.kubernetes.io/os": linux

  # -- Provide deployment tolerations
  tolerations: []

  # -- Provide deployment affinity
  affinity: {}

  configuration:
    secret: {}
    map: {}

  # -- Set could environment managed by team-management-service
  # -- Possible values (prod | dev)
  cloudEnvironment: prod

  # -- Set database connection string values
  database:
    ssl: "true"
    host: ""
    userName: ""
    password: ""
    name: "frontegg_team_management"

  # -- Set Redis connection string values
  redis:
    host: ""
    port: "6379"
    password: ""
    index: "1"
    tls: "true"

  # -- Frontegg's services url for inner communications
  # -- Provide an alternate url for a service if a service name was changed
  network:
    adminsServiceUrl: http://frontegg-admins-service
    auditsServiceUrl: http://frontegg-audits-service
    authenticationServiceUrl: http://frontegg-authentication-service
    metadataServiceUrl: http://frontegg-metadata-service
    notificationServiceUrl: http://frontegg-notification-service
    reportsEngineUrl: http://frontegg-reporting-engine
    reportsServiceUrl: http://frontegg-reporting-service
    teamServiceUrl: http://frontegg-team-management-service
    vendorsServiceUrl: http://frontegg-vendors-service
    tenantsServiceUrl: http://frontegg-tenants-service
    webpushServiceUrl: http://frontegg-webpush-service
    featureFlagsServiceUrl: http://frontegg-feature-flags-service
    webhookServiceUrl: http://frontegg-webhook-service
    eventsServiceUrl: http://frontegg-event-service
    identityServiceUrl: http://frontegg-identity-service
    integrationsServiceUrl: http://frontegg-integrations-service

  # -- Set saml properties, values should be provided by Frontegg.
  saml:
    privateKey: ""
    publicKey: ""
    certificate: ""

  # -- Set frontegg properties
  frontegg:
    clientId: ""
