apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "frontegg-enterprise.fullname" . }}-encrypt
  labels:
    app.kubernetes.io/name: {{ include "frontegg-enterprise.name" . }}
    helm.sh/chart: {{ include "frontegg-enterprise.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: task-master-cli
          image: {{ index .Values "task-master" "image" "prefix" }}{{ index .Values "task-master" "image" "repository" }}:{{ index .Values "task-master" "appVersion" }}
          env:
            - name: EMAIL
              value: {{ .Values.taskMasterEncryptJob.email | quote }}
            - name: PASSWORD
              value: {{ .Values.taskMasterEncryptJob.password | quote }}
            - name: CONFIG_PATH
              value: "/etc/config/config"
          command:
            - /bin/sh
            - -c
            - |
              # Function to extract YAML values using grep and awk
              get_yaml_value() {
                local key=$1
                local file=$2
                grep "^$key:" "$file" | awk '{print $2}' | tr -d '"'
              }

              # Read values from the mounted secret file
              CONFIG_FILE="/etc/config/config"

              IDENTITY_CRYPTO_KEY=$(get_yaml_value "identityCryptoKey" "$CONFIG_FILE")
              PUBLIC_KEY_BASE64=$(get_yaml_value "authPublicKey" "$CONFIG_FILE")
              TEMP_PRIVATE_KEY=$(get_yaml_value "fronteggPrivateKey" "$CONFIG_FILE")
              
              # Debug: Print values (first 50 chars for security)
              echo "Identity Crypto Key: ${IDENTITY_CRYPTO_KEY:0:50}..."
              echo "Public Key (first 50 chars): ${PUBLIC_KEY_BASE64:0:50}..."
              echo "Private Key (first 50 chars): ${TEMP_PRIVATE_KEY:0:50}..."
              
              # Verify we have all required values
              if [ -z "$IDENTITY_CRYPTO_KEY" ] || [ -z "$PUBLIC_KEY_BASE64" ] || [ -z "$TEMP_PRIVATE_KEY" ]; then
                echo "ERROR: Missing required configuration values"
                echo "Config file contents:"
                cat "$CONFIG_FILE"
                exit 1
              fi
              
              # Encrypt the private key using the identity crypto key
              echo "Encrypting private key..."
              ENCRYPTED_KEY=$(task-master-cli encrypt "$TEMP_PRIVATE_KEY")
              if [ $? -ne 0 ]; then
                echo "ERROR: task-master-cli encrypt failed!"
                exit 1
              fi
              echo "Encrypted key (first 50 chars): ${ENCRYPTED_KEY:0:50}..."
              
              # Run the create environment command
              echo "Creating Frontegg environment..."
              task-master-cli run create-frontegg-env -d "{\n                \"userData\": {\n                  \"email\": \"$EMAIL\",\n                  \"password\": \"$PASSWORD\"\n                },\n                \"vendorKeys\": {\n                  \"private\": \"$ENCRYPTED_KEY\",\n                  \"publicEncoded\": \"$PUBLIC_KEY_BASE64\"\n                }\n              }"
              if [ $? -ne 0 ]; then
                echo "ERROR: task-master-cli run create-frontegg-env failed!"
                exit 1
              fi
          volumeMounts:
            - name: secret-volume
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: secret-volume
          secret:
            secretName: task-master-v2