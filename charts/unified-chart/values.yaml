# Default values for frontegg unified chart.

# required
# name: my-new-awesome-service
# team: my-team-of-imbeciles

envID: local

# CAUTION this will change name of all manifests
nameSuffix: v2

appVersion: master-latest
argoRollouts: true

web:
  command: ["/bin/bash"]
  args: ["entrypoint.sh", "service"]
  env:
    # - name: FRONTEGG_IS_SERVICE_OFFLINE_PROCESS
    #   value: "false"
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 75
  podAnnotations: {}
  resources: {}
  terminationGracePeriodSeconds: 30
  # handles restart (not offline)
  livenessProbe:
    failureThreshold: 3
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 40
    periodSeconds: 60
  # decides when to forward requests (not offline)
  readinessProbe:
    failureThreshold: 1
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
  nodeSelector: {}
  tolerations: []
  affinity: {}

worker:
  enabled: false
  command: ["/bin/bash"]
  args: ["entrypoint.sh", "worker"]
  env:
    # - name: FRONTEGG_IS_SERVICE_OFFLINE_PROCESS
    #   value: "true"

image:
  repository:

revisionHistoryLimit: 3

imagePullPolicy: Always
imagePullSecrets:
  - name: regcred

service:
  type: ClusterIP

# default job annotation
# argocd.argoproj.io/sync-wave: "-500"
jobs: {}

cronjobs:
  refresh:
    enabled: false
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "-500"
    command: ["/bin/bash"]
    args: ["entrypoint.sh"]
    schedule: "0 * * * *"
    ttlSecondsAfterFinished: 600
    concurrencyPolicy: Replace
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 1
    restartPolicy: Never
    nodeSelector: {}

configmap:
  annotations:
    argocd.argoproj.io/sync-wave: "-1000"
  data: {}
  tplData: ""

configuration:
  map:
    config-center:

externalSecret:
  enabled: false
  mountPath: /etc/config/config.yaml
  subPath: config
  refreshInterval: 1m
  annotations:
    argocd.argoproj.io/sync-wave: "-1000"
  text: |
    {{- $secret := .contents | fromYaml}}
    apiKey: {{ $secret.frontegg.apiKeys.tenantsServiceApiKey| default "x" }}
  additionalSecrets: ""

regcred:
  enabled: false
  namespace: frontegg
  annotations:
    argocd.argoproj.io/sync-wave: "-500"

authorization:
  enabled: true
  role:
    namespace: frontegg
    rules:
      - apiGroups: ["*"]
        resources: ["*"]
        verbs: ["*"]
  roleBinding:
    namespace: frontegg
  serviceAccount:

prometheusRule:
  enabled: false

ingress:
  enabled: false

albIngress:
  enabled: false

highPriority:
  enabled: false
  command: ["/bin/bash"]
  env:
    # - name: FRONTEGG_IS_SERVICE_OFFLINE_PROCESS
    #   value: "false"
  args: ["entrypoint.sh", "service"]
  labels:
    priority: "high"
  replicaCount: 1
  autoscaling:
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 75

serviceProfile: {}

# additional helm templates to render resources freely
additionalTemplates: ""
