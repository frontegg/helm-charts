{{- if .Values.offline.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fuc.name" . }}-worker-deployment
  labels:
  {{- include "fuc.workerLabels" . | nindent 4 }}
spec:
  {{- if .Values.argoRollouts }}
  replicas: 0
  {{- else if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.offline.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 3 }}
  selector:
    matchLabels:
      {{- include "fuc.workerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "fuc.workerLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ (print .Values.configmap) | sha256sum }}
        {{- with .Values.offline.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.offline.terminationGracePeriodSeconds | default 30 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.externalSecret }}
      {{- if .Values.externalSecret.enabled }}
      volumes:
        - name: vol-secret
          secret:
            secretName: {{ include "external-secret-unique-name" . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ include "fuc.name" . }}-worker
          image: "{{ required ".Values.image.repository must be set" .Values.image.repository }}:{{ .Values.appVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.externalSecret }}
          {{- if .Values.externalSecret.enabled }}
          volumeMounts:
            - name: vol-secret
              mountPath: /etc/config/config.yaml
              subPath: config
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }} # change this to 80 in the future
              protocol: TCP
          {{- with .Values.offline.livenessProbe }}
          livenessProbe:
          {{- . | toYaml | nindent  12 }}
          {{- end }}
          {{- with .Values.offline.readinessProbe }}
          readinessProbe:
          {{- . | toYaml | nindent  12 }}
          {{- end }}
          {{- with .Values.offline.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          {{- if .Values.externalSecret }}
          {{- if .Values.externalSecret.enabled }}
            - name: FRONTEGG_CONFIG_DIRECTORY
              value: "/etc/config"
          {{- end }}
          {{- end }}
          {{- range $config_name, $values := .Values.configuration.map }}
          {{- range $key, $value :=  $values}}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $config_name }}
                  key: {{ $value }}
          {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "fuc.name" . }}-configmap
          resources:
            {{- toYaml .Values.offline.resources | nindent 12 }}
          args:
            - "/bin/bash"
            - "./entrypoint.sh"
            - "worker"
      {{- with .Values.offline.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
