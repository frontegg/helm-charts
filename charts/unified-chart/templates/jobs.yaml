{{- $values := .Values -}}
{{- $top := . -}}
{{- range $jobName, $job := $values.jobs -}}
{{- if $job.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "unified.name" $top | trunc 30 }}-{{ $jobName | trunc 30 }}
  labels:
    {{- include "unified.jobLabels" $top | nindent 4 }}
    app.kubernetes.io/component: {{ $jobName }}
  annotations:
    {{- if $job.metadata }}
    {{- with (omit $job.metadata.annotations "argocd.argoproj.io/sync-wave") }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  {{- with $job.spec }}
  completions: {{ .completions | default 1 }}
  parallelism: {{ .parallelism | default 1 }}
  backoffLimit: {{ .backoffLimit | default 1 }}
  template:
    metadata:
      name: {{ include "unified.name" $top }}-{{ $jobName }}-{{ $values.appVersion }}
      labels:
        {{- include "unified.jobLabels" $top | nindent 8 }}
        app.kubernetes.io/component: {{ $jobName }}
      {{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: {{ .restartPolicy | default "Never" }}
      {{- with $values.imagePullSecrets }}
      imagePullSecrets :
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $values.externalSecret.enabled }}
      volumes:
        - name: vol-secret
          secret:
            secretName: {{ include "name-app-version" $ }}
      {{- end }}
      containers:
        - name: {{ include "unified.name" $top }}-{{ $jobName }}
          image: "{{ $values.image.repository }}:{{ $values.appVersion }}"
          imagePullPolicy: {{ $values.imagePullPolicy }}
          {{- if $values.externalSecret.enabled }}
          volumeMounts:
            {{- include "unified.externalsecret.volumemount" $ | nindent 12 }}
          {{- end }}
          env:
            {{- include "unified.container.env" . | indent 12 -}}
            {{- if $values.externalSecret.enabled }}
            - name: FRONTEGG_CONFIG_DIRECTORY
              value: "/etc/config"
            {{- end }}
            {{- range $config_name, $localValues := $values.configuration.map }}
            {{- range $key, $value :=  $localValues }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $config_name }}
                  key: {{ $value }}
            {{- end }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "unified.name" $top }}-configmap
          command:
            {{- range .command }}
            - {{ . | quote  }}
            {{- end }}
          args:
            {{- range .args }}
            - {{ . | quote  }}
            {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
      {{- if $values.nodeSelector }}
      nodeSelector:
      {{- toYaml $values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $values.tolerations }}
      tolerations:
      {{- toYaml $values.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
