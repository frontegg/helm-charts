{{- $values := .Values -}}
{{- if .Values.hp.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hp.name" . }}
  labels:
  {{- include "hp.labels" . | nindent 4 }}
  {{- toYaml .Values.hp.labels | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 2 }}
  {{- if .Values.argoRollouts }}
  replicas: 0
  {{- else if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.hp.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hp.selector.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hp.labels" . | nindent 8 }}
      annotations:
        {{- $valshp := .Values.hp -}}
        {{- $bothhp := merge $valshp (pick .Values "linkerd") }}
        {{- include "calculate.pod.annotations" $bothhp | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "name" . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.hp.terminationGracePeriodSeconds | default 30 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.externalSecret.enabled }}
      volumes:
        - name: secret-volume
          secret:
            secretName: {{ include "secret.name" . }}
      {{- end }}
      containers:
        - name: {{ include "hp.name" . }}
          image: "{{ required "what do you wanna run: .Values.image.repository must be set" .Values.image.repository }}:{{ include "appVersion" . }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.externalSecret.enabled }}
          volumeMounts:
            {{- include "externalsecret.volumemount" . | nindent 12 }}
          {{- end }}
          ports:
            {{- if .Values.hp.ports }}
            {{- toYaml .Values.hp.ports | nindent 12 }}
            {{- else }}
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- end }}
          {{- with .Values.web.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- include "container.env" .Values.hp | indent 12 -}}
            {{- if .Values.externalSecret.enabled }}
            - name: FRONTEGG_CONFIG_DIRECTORY
              value: "/etc/config"
            {{- end }}
            {{- range $config_name, $values := .Values.configuration.map }}
            {{- range $key, $value :=  $values}}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $config_name }}
                  key: {{ $value }}
            {{- end }}
            {{- end }}
          {{- if .Values.configmap.data }}
          envFrom:
            - configMapRef:
                name: {{ include "name" . }}
          {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          command:
            {{- range .Values.hp.command }}
            - {{ . | quote  }}
            {{- end }}
          args:
            {{- range .Values.hp.args }}
            - {{ . | quote  }}
            {{- end }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}