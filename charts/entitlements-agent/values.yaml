# Default values for entitelment-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Deployment mode: "singlePod" for a pod with two containers, "separateDeployments" for two separate deployments
deploymentMode: "singlePod"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
# OPA Agent container/deployment image
image:
  repository: frontegg/entitlements-agent
  # This sets the pull policy for images.
  tag: 06c96c0
  pullPolicy: IfNotPresent

# MCP Server container/deployment image
secondaryImage:
  repository: frontegg/entitlements-agent-mcp-server
  pullPolicy: IfNotPresent
  tag: 06c96c0
  # Only used when deploymentMode is "separateDeployments"
  replicaCount: 1

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - NET_RAW
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  # Multiple ports to expose both containers
  ports:
    - name: agent
      port: 8181
      targetPort: 8181
      protocol: TCP
    - name: mcp-server
      port: 8182
      targetPort: 8182
      protocol: TCP

resources:
  opa-agent:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      memory: 1Gi
  mcp-server:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      memory: 500Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 3
  periodSeconds: 5
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 3
  periodSeconds: 5
startupProbe:
  httpGet:
    path: /health?bundles
    port: http
  initialDelaySeconds: 5
  failureThreshold: 10
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  # OPA Agent container environment variables
  opaagent:
    fronteggRegion: "eu"
    fronteggClientId: "your frontegg client id"
    fronteggClientCredentialsOauthClientId: "your oauth client credentials id"
    fronteggClientCredentialsOauthSecret: "your oauth client credentials secret"
    pollingMinDelay: "30"
    pollingMaxDelay: "60"
  # MCP Server container environment variables
  mcpserver:
    pdpUrl: "http://localhost:8181"
