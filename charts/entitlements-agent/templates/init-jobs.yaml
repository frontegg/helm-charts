{{- if .Values.initJobs.enabled }}
---
# Job to create the SpiceDB database
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "fullname" . }}-spicedb-create-db
  labels:
    {{- include "commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: init-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.initJobs.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "commonLabels" . | nindent 8 }}
        app.kubernetes.io/component: init-job
    spec:
      restartPolicy: {{ .Values.initJobs.restartPolicy }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.cockroachdb.operator.enabled .Values.cockroachdb.tlsEnabled }}
      initContainers:
        - name: setup-certs
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              cp /tls-certs/ca.crt /cockroach-certs/
              cp /tls-certs/tls.crt /cockroach-certs/client.root.crt
              cp /tls-certs/tls.key /cockroach-certs/client.root.key
              chmod 644 /cockroach-certs/ca.crt /cockroach-certs/client.root.crt
              chmod 644 /cockroach-certs/client.root.key
              chown -R 65532:65532 /cockroach-certs/
          volumeMounts:
            - name: client-certs-raw
              mountPath: /tls-certs
              readOnly: true
            - name: client-certs-formatted
              mountPath: /cockroach-certs
      {{- end }}
      containers:
        - name: create-db
          image: "{{ .Values.cockroachdb.repository }}:{{ .Values.cockroachdb.tag }}"
          imagePullPolicy: {{ .Values.cockroachdb.pullPolicy }}
          command:
            - /cockroach/cockroach
            - sql
            {{- if .Values.cockroachdb.operator.enabled }}
            {{- if .Values.cockroachdb.tlsEnabled }}
            - --certs-dir=/cockroach-certs
            - --host={{ include "fullname" . }}-cockroachdb-public:{{ .Values.service.cockroachdb.port }}
            {{- else }}
            - --insecure
            - --host={{ include "fullname" . }}-cockroachdb-public:{{ .Values.service.cockroachdb.port }}
            {{- end }}
            {{- else }}
            - --insecure
            - --host={{ include "fullname" . }}-cockroachdb:{{ .Values.service.cockroachdb.port }}
            {{- end }}
            - --execute=CREATE DATABASE IF NOT EXISTS {{ .Values.env.cockroachdb.pgdatabase }};
          {{- if and .Values.cockroachdb.operator.enabled .Values.cockroachdb.tlsEnabled }}
          volumeMounts:
            - name: client-certs-formatted
              mountPath: /cockroach-certs
              readOnly: true
          {{- end }}
          {{- with .Values.initJobs.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if and .Values.cockroachdb.operator.enabled .Values.cockroachdb.tlsEnabled }}
      volumes:
        - name: client-certs-raw
          projected:
            sources:
            - secret:
                name: {{ include "fullname" . }}-cockroachdb-root
            - secret:
                name: {{ include "fullname" . }}-cockroachdb-ca
        - name: client-certs-formatted
          emptyDir: {}
      {{- end }}
---
# Job to run SpiceDB migrations
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "fullname" . }}-spicedb-migrate
  labels:
    {{- include "commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: init-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.initJobs.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "commonLabels" . | nindent 8 }}
        app.kubernetes.io/component: init-job
    spec:
      restartPolicy: {{ .Values.initJobs.restartPolicy }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.cockroachdb.operator.enabled .Values.cockroachdb.tlsEnabled }}
      initContainers:
        - name: setup-certs
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              cp /tls-certs/ca.crt /cockroach-certs/
              cp /tls-certs/tls.crt /cockroach-certs/client.root.crt
              cp /tls-certs/tls.key /cockroach-certs/client.root.key
              chmod 644 /cockroach-certs/ca.crt /cockroach-certs/client.root.crt
              chmod 644 /cockroach-certs/client.root.key
              chown -R 65532:65532 /cockroach-certs/
          volumeMounts:
            - name: client-certs-raw
              mountPath: /tls-certs
              readOnly: true
            - name: client-certs-formatted
              mountPath: /cockroach-certs
      {{- end }}
      containers:
        - name: migrate
          image: "{{ .Values.spicedb.repository }}:{{ .Values.spicedb.tag }}"
          imagePullPolicy: {{ .Values.spicedb.pullPolicy }}
          command:
            - spicedb
            - datastore
            - migrate
            - head
            - --datastore-engine={{ .Values.spicedb.datastore.engine }}
            {{- if .Values.cockroachdb.operator.enabled }}
            {{- if .Values.cockroachdb.tlsEnabled }}
            - --datastore-conn-uri=postgres://root@{{ include "fullname" . }}-cockroachdb-public:{{ .Values.service.cockroachdb.port }}/{{ .Values.env.cockroachdb.pgdatabase }}?sslmode=require&sslcert=/cockroach-certs/client.root.crt&sslkey=/cockroach-certs/client.root.key&sslrootcert=/cockroach-certs/ca.crt
            {{- else }}
            - --datastore-conn-uri=postgres://{{ .Values.env.cockroachdb.pguser }}:{{ .Values.env.cockroachdb.pgpassword }}@{{ include "fullname" . }}-cockroachdb-public:{{ .Values.service.cockroachdb.port }}/{{ .Values.env.cockroachdb.pgdatabase }}?sslmode=disable
            {{- end }}
            {{- else }}
            - --datastore-conn-uri=postgres://{{ .Values.env.cockroachdb.pguser }}:{{ .Values.env.cockroachdb.pgpassword }}@{{ include "fullname" . }}-cockroachdb:{{ .Values.service.cockroachdb.port }}/{{ .Values.env.cockroachdb.pgdatabase }}?sslmode=disable
            {{- end }}
          {{- if and .Values.cockroachdb.operator.enabled .Values.cockroachdb.tlsEnabled }}
          volumeMounts:
            - name: client-certs-formatted
              mountPath: /cockroach-certs
              readOnly: true
          {{- end }}
          {{- with .Values.initJobs.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if and .Values.cockroachdb.operator.enabled .Values.cockroachdb.tlsEnabled }}
      volumes:
        - name: client-certs-raw
          projected:
            sources:
            - secret:
                name: {{ include "fullname" . }}-cockroachdb-root
            - secret:
                name: {{ include "fullname" . }}-cockroachdb-ca
        - name: client-certs-formatted
          emptyDir: {}
      {{- end }}
{{- end }} 