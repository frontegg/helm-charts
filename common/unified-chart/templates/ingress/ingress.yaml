{{- $top := . }}
{{- $values := .Values }}
{{- range $ingname, $ingress := .Values.ingresses }}
{{- if $ingress.enabled }}
{{- $name := include "name" $top }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ required ".Values.name is required" $values.name }}-{{ $ingname }}
  labels:
    {{- include "labels" $top | nindent 4 }}
  {{- with $ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $ingress.ingressClassName }}
  ingressClassName: {{ . | quote }}
  {{- end }}
{{- with $ingress.tls }}
{{- if .enabled}}
  tls:
    - hosts:
        - {{ required "Need a proper hostname, u idiot!" .hostname | quote }}
      secretName: {{ .secretName }}
{{- end }}
{{- end }}
  rules:
    {{- if not $ingress.rules }}
    - host: {{ tpl $ingress.hostname $top | default "" | quote }}
      http:
        paths:
        - path: {{ $ingress.path | default "/" }}
          backend:
            service:
              name: {{ include "web.name" $ }}
              port:
                number: {{ $ingress.service.port | default 80 }}
          pathType: {{ $ingress.pathType | default "ImplementationSpecific" }}
    {{- end }}
    {{- range $rule := $ingress.rules }}
    - host: {{ required "rule hostname is required when providing list of rules" (tpl $rule.hostname $) | quote }}
      http:
        paths:
          {{- range $path := $rule.paths }}
          - path: {{ required "path is required when providing list of rules" $path.path }}
            backend:
              service:
                name: {{ include "web.name" $ }}
                port:
                  number: {{ $path.servicePort | default 80 }}
            pathType: {{ $path.pathType | default "ImplementationSpecific" }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}