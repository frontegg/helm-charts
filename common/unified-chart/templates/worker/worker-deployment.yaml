{{- $top := . -}}
{{- $values := $top.Values -}}
{{- if $values.worker.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "worker.name" $top }}
  labels:
    {{- include "worker.labels" $top | nindent 4 }}
spec:
  {{- if $values.argoRollouts.enabled }}
  replicas: 0
  {{- else if not $values.web.autoscaling.enabled }}
  replicas: {{ $values.worker.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ $values.revisionHistoryLimit | default 2 }}
  selector:
    matchLabels:
      {{- include "worker.selector.labels" $top | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "worker.labels" $top | nindent 8 }}
      annotations:
        checksum/secret: {{ printf "%s%s" (print $values.externalSecret.text) (print $values.externalSecret.additionalSecrets) | sha256sum }}
        {{- $valsworker := $values.worker -}}
        {{- include "calculate.pod.annotations" $valsworker | nindent 8 }}
    spec:
      {{- if $values.serviceAccount.enabled }}
      serviceAccountName: {{ include "service.account.name" $top}}
      {{- end }}
      terminationGracePeriodSeconds: {{ $values.worker.terminationGracePeriodSeconds | default 30 }}
      {{- with $values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or $values.externalSecret.enabled $values.worker.additionalVolumes }}
      volumes:
        {{- if and $values.externalSecret.enabled $values.externalSecret.mountAsVolume }}
        - name: secret-volume
          secret:
            secretName: {{ include "secret.name" $top }}
        {{- end }}
        {{- with $values.worker.additionalVolumes }}
        {{- tpl . $top | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ include "worker.container.name" $top }}
          image: "{{ $values.image.prefix }}{{ required ".Values.image.repository must be set" $values.image.repository }}:{{ include "appVersion" $top }}"
          imagePullPolicy: {{ $values.imagePullPolicy }}
          {{- if or $values.externalSecret.enabled $values.web.additionalVolumeMounts }}
          volumeMounts:
            {{- if and $values.externalSecret.enabled $values.externalSecret.mountAsVolume }}
            {{- include "externalsecret.volumemount" $top | nindent 12 }}
            {{- end }}
            {{- with $values.web.additionalVolumeMounts }}
            {{- tpl . $top | nindent 12 }}
            {{- end }}
          {{- end }}
          ports:
            {{- if $values.worker.ports }}
            {{- toYaml $values.worker.ports | nindent 12 }}
            {{- else }}
            - name: http
              containerPort: {{ $values.service.targetPort }}
              protocol: TCP
            {{- end }}
          {{- with $values.worker.livenessProbe }}
          livenessProbe:
          {{- . | toYaml | nindent  12 }}
          {{- end }}
          {{- with $values.worker.readinessProbe }}
          readinessProbe:
            successThreshold: {{ .successThreshold | default 5 }}
          {{- . | toYaml | nindent  12 }}
          {{- end }}
          {{- with $values.worker.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- include "container.env" $values.worker | indent 12 -}}
            {{- range $config_name, $keyValues := $values.configuration.map }}
            {{- range $key, $value :=  $keyValues }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $config_name }}
                  key: {{ $value }}
            {{- end }}
            {{- end }}
            {{- with $values.worker.vars }}
            {{- tpl (toYaml .) $ | nindent 12 }}
            {{- end }}
          {{- if $values.configmap.data }}
          envFrom:
            - configMapRef:
                name: {{ include "name" $top }}
            {{- with $values.worker.additionalEnvFrom }}
            {{- tpl . $top | nindent 12 }}
            {{- end }}
          {{- end }}
          resources:
            {{- required ".Values.worker.resources is required" $values.worker.resources | toYaml | nindent 12 }}
          {{- with $values.worker.command }}
          command:
            {{- range . }}
            - {{ . | quote  }}
            {{- end }}
          {{- end }}
          {{- with $values.worker.args }}
          args:
            {{- range . }}
            - {{ . | quote  }}
            {{- end }}
          {{- end }}
      {{- with $values.worker.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $values.worker.affinity }}
      affinity:
      {{- tpl ($values.worker.affinity | toYaml) $top | nindent 8 }}
      {{- else }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.frontegg.com/name
                      operator: In
                      values:
                        - {{ include "worker.name" $top }}
                topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- with $values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
