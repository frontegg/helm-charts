{{- $top := . -}}
{{- if .Values.worker.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "worker.name" . }}
  labels:
    {{- include "worker.labels" . | nindent 4 }}
spec:
  {{- if .Values.argoRollouts.enabled }}
  replicas: 0
  {{- else if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 2 }}
  selector:
    matchLabels:
      {{- include "worker.selector.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "worker.labels" . | nindent 8 }}
      annotations:
        checksum/secret: {{ printf "%s%s" (print .Values.externalSecret.text) (print .Values.externalSecret.additionalSecrets) | sha256sum }}
        {{- $valsworker := .Values.worker -}}
        {{- $bothworker := merge $valsworker (pick .Values "linkerd") }}
        {{- include "calculate.pod.annotations" $bothworker | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "service.account.name" . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds | default 30 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.externalSecret.enabled .Values.worker.additionalVolumes }}
      volumes:
        {{- if .Values.externalSecret.enabled }}
        - name: secret-volume
          secret:
            secretName: {{ include "secret.name" . }}
        {{- end }}
        {{- with .Values.worker.additionalVolumes }}
        {{- tpl . $top | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ include "container.name" . }}
          image: "{{ .Values.image.prefix }}{{ required ".Values.image.repository must be set" .Values.image.repository }}:{{ include "appVersion" . }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if or .Values.externalSecret.enabled .Values.web.additionalVolumeMounts }}
          volumeMounts:
            {{- if .Values.externalSecret.enabled }}
            {{- include "externalsecret.volumemount" . | nindent 12 }}
            {{- end }}
            {{- with .Values.web.additionalVolumeMounts }}
            {{- tpl . $top | nindent 12 }}
            {{- end }}
          {{- end }}
          ports:
            {{- if .Values.worker.ports }}
            {{- toYaml .Values.worker.ports | nindent 12 }}
            {{- else }}
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- end }}
          {{- with .Values.worker.livenessProbe }}
          livenessProbe:
          {{- . | toYaml | nindent  12 }}
          {{- end }}
          {{- with .Values.worker.readinessProbe }}
          readinessProbe:
            successThreshold: {{ .successThreshold | default 5 }}
          {{- . | toYaml | nindent  12 }}
          {{- end }}
          {{- with .Values.worker.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- include "container.env" .Values.worker | indent 12 -}}
            {{- range $config_name, $values := .Values.configuration.map }}
            {{- range $key, $value :=  $values}}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $config_name }}
                  key: {{ $value }}
            {{- end }}
            {{- end }}
          {{- if .Values.configmap.data }}
          envFrom:
            - configMapRef:
                name: {{ include "name" . }}
            {{- with .Values.worker.additionalEnvFrom }}
            {{- tpl . $top | nindent 12 }}
            {{- end }}
          {{- end }}
          resources:
            {{- required ".Values.worker.resources is required" .Values.worker.resources | toYaml | nindent 12 }}
          {{- with .Values.worker.command }}
          command:
            {{- range . }}
            - {{ . | quote  }}
            {{- end }}
          {{- end }}
          {{- with .Values.worker.args }}
          args:
            {{- range . }}
            - {{ . | quote  }}
            {{- end }}
          {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
